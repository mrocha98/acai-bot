{"version":3,"sources":["utils/global-state-modal-cardapio.js","utils/mocks.js","components/item-cardapio/item-cardapio.component.jsx","helpers/formata-preco.js","components/cardapio/cardapio.component.jsx","components/modal-cardapio/modal-cardapio.component.jsx","components/barra-superior/barra-superior.component.jsx","components/toast-autenticado/toast-autenticado.component.jsx","components/chat/chat.component.jsx","pages/home/home.component.jsx","services/urls.js","pages/teste-integracao/teste-integracao.component.jsx","App.js","serviceWorker.js","index.js"],"names":["createGlobalState","modalCardapio","GlobalStateProvider","setGlobalState","useGlobalState","showModalCardapio","hideModalCardapio","event","stopPropagation","infosBarraSuperior","nome","status","fotoUrl","itensCardapio","id","tipo","preco","ItemCardapio","className","precoStr","toString","replace","precoSplit","split","length","concat","inteiro","decimal","formataPreco","Cardapio","itens","alt","src","onClick","icon","faTimesCircle","filter","item","map","key","ModalCardapio","BarraSuperior","style","backgroundImage","ToastAutenticado","Swal","mixin","toast","position","showConfirmButton","timer","timerProgressBar","onOpen","addEventListener","stopTimer","resumeTimer","fire","title","Chat","props","styleSet","window","WebChat","createStyleSet","bubbleBackground","bubbleFromUserBackground","hideUploadButton","sendBoxBackground","sendBoxButtonColor","sendBoxButtonColorOnHover","timestampFormat","directLine","DirectLine","token","process","state","user","value","handleChange","bind","handleSubmit","this","setState","target","preventDefault","text","userID","type","onChange","React","Component","Home","urlAuthentication","urlConversation","urlMessage","idMessage","urlResponse","conversation","message","TesteIntegracao","autentica","a","handleClick","axios","post","headers","Authorization","then","res","isAuthenticated","data","console","log","catch","err","inicia","conversationId","enviaOi","from","name","splitedData","botResponseId","recebeRespostas","get","arr","activities","forEach","activity","push","responses","resp","isLoading","App","exact","path","component","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.928b05ed.chunk.js","sourcesContent":["import {createGlobalState} from 'react-hooks-global-state';\n\nconst {GlobalStateProvider, setGlobalState, useGlobalState} = createGlobalState({\n    modalCardapio: '',\n});\n\n/**\n * @author Matheus Rocha <matheus.silva@gsw.com.br>\n * @function showModalCardapio Aplica a classe 'show' no modal\n * */\nexport const showModalCardapio = () => {\n    setGlobalState('modalCardapio', \"show\");\n};\n\n/**\n * @author Matheus Rocha <matheus.silva@gsw.com.br>\n * @function hideModalCardapio Remove a classe 'show' no modal\n * */\nexport const hideModalCardapio = event => {\n    event.stopPropagation();\n    setGlobalState('modalCardapio', \"\");\n};\n\nexport {GlobalStateProvider, useGlobalState};\n","/**\n * Arquivo que centraliza objetos utilizados para mockar\n * */\n\nexport const infosBarraSuperior = {\n    nome: 'Açaí Delivery',\n    status: 'online',\n    fotoUrl: 'https://cdn.pixabay.com/photo/2017/09/03/01/20/acai-2709077_960_720.jpg',\n};\n\nexport const itensCardapio = [\n    {\n        id: 1,\n        tipo: 'tamanho',\n        nome: 'Pequeno (300ml)',\n        preco: 7.5,\n    },\n    {\n        id: 2,\n        tipo: 'adicional',\n        nome: 'Confete',\n        preco: 1.5,\n    },\n    {\n        id: 3,\n        tipo: 'tamanho',\n        nome: 'Médio (500ml)',\n        preco: 8.15,\n    },\n    {\n        id: 4,\n        tipo: 'adicional',\n        nome: 'Leite Moça',\n        preco: 1.75,\n    },\n    {\n        id: 5,\n        tipo: 'adicional',\n        nome: 'Leite Ninho',\n        preco: 1.25,\n    },\n    {\n        id: 6,\n        tipo: 'adicional',\n        nome: 'Paçoca',\n        preco: 1.75,\n    },\n    {\n        id: 7,\n        tipo: 'tamanho',\n        nome: 'Grande (700ml)',\n        preco: 10,\n    },\n    {\n        id: 8,\n        tipo: 'adicional',\n        nome: 'Granola',\n        preco: 1.00,\n    },\n    {\n        id: 9,\n        tipo: 'adicional',\n        nome: 'Bis',\n        preco: 2.1,\n    },\n    {\n        id: 10,\n        tipo: 'adicional',\n        nome: 'Bis Branco',\n        preco: 2.35,\n    },\n    {\n        id: 11,\n        tipo: 'adicional',\n        nome: 'Ovomaltine',\n        preco: 3.30,\n    },\n];\n","import React from 'react';\nimport formataPreco from \"../../helpers/formata-preco\";\nimport './item-cardapio.styles.scss';\n\n/**\n * Componente responsável por renderizar um item do Cardápio\n * @author Matheus Rocha <matheus.silva@gsw.com.br>\n * @param {String} nome Nome do item/produto\n * @param {number} preco Preço do item/produto\n * */\nconst ItemCardapio = ({nome, preco}) => (\n    <div className=\"item-cardapio\">\n        <span className=\"item-cardapio__nome\">{nome}</span>\n        <span className=\"item-cardapio__preco\">R$ {formataPreco(preco)}</span>\n    </div>\n);\n\nexport default ItemCardapio;","/**\n * @author Matheus Rocha <matheus.silva@gsw.com.br>\n * @function formataPreco Função para deixar o preço com dois dígitos depois da vírgula\n * @param {number} preco Preço a ser formatado\n * */\nexport default function formataPreco(preco) {\n    const precoStr = preco.toString().replace('.', ',');\n    const precoSplit = precoStr.split(',');\n    if(precoSplit.length === 1)\n        return precoStr.concat(',00');\n    const inteiro = precoSplit[0];\n    const decimal = precoSplit[1];\n    if(decimal.length < 2)\n        return inteiro.concat(',').concat(decimal).concat('0');\n    return precoStr;\n}","import React from 'react';\nimport { hideModalCardapio } from '../../utils/global-state-modal-cardapio';\nimport './cardapio.styles.scss';\nimport './scrollbal.scss';\nimport ItemCardapio from \"../item-cardapio/item-cardapio.component\";\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\nimport {faTimesCircle} from \"@fortawesome/free-solid-svg-icons\";\n\n/**\n * @author Matheus Rocha <matheus.silva@gsw.com.br>\n * @function Cardapio Componente que concentra as informações do Cardápio\n * @param {Object} itens Itens do Cardápio a serem renderizados\n * */\nconst Cardapio = ({itens}) => {\n\n    return (\n        <div className=\"cardapio\">\n            <div className=\"cardapio__banner\">\n                <img className=\"cardapio__imagem\" alt=\"açaí\"\n                     src=\"https://blog.finamac.com/wp-content/uploads/2018/07/218564-voce-conhece-quais-os-beneficios-do-acai-para-saude-1280x640.jpg\"/>\n                <h1 className=\"cardapio__titulo\">Cardápio</h1>\n                <button className=\"cardapio__fechar\" onClick={hideModalCardapio}>\n                    <FontAwesomeIcon className=\"cardapio__icone-fechar\" icon={faTimesCircle}/>\n                </button>\n            </div>\n            <div className=\"cardapio__info\">\n                <h2 className=\"cardapio__tamanhos\">Tamanhos</h2>\n                <ul className=\"cardapio__itens\">\n                    {\n                        itens.filter(item => item.tipo === 'tamanho').map(item => (\n                            <ItemCardapio key={item.id}{...item} />\n                        ))\n                    }\n                </ul>\n                <br/>\n                <h2 className=\"cardapio__adicionais\">Adicionais</h2>\n                <ul className=\"cardapio__itens\">\n                    {\n                        itens.filter(item => item.tipo === 'adicional').map(item => (\n                            <ItemCardapio key={item.id}{...item} />\n                        ))\n                    }\n                </ul>\n            </div>\n        </div>\n    )\n};\n\nexport default Cardapio;","import React from 'react';\n\nimport './modal-cardapio.styles.scss';\nimport Cardapio from \"../cardapio/cardapio.component\";\n\n/**\n * @author Matheus Rocha <matheus.silva@gsw.com.br>\n * @function ModalCardapio Componente responsável por exibir o conteúdo do componente Cardápio em forma de modal\n * @param {string} className Nome de uma classe css que definirá a visibilidade do modal\n * @param {Object} itens Conjunto de objetos para serem renderizados no Cardápio\n * */\nconst ModalCardapio = ({className, itens}) => (\n    <div className={`${className} modal`}>\n        <Cardapio itens={itens}/>\n    </div>\n);\n\nexport default ModalCardapio;","import React from 'react';\nimport { useGlobalState, showModalCardapio } from '../../utils/global-state-modal-cardapio';\nimport {Button} from 'reactbulma';\nimport {itensCardapio} from '../../utils/mocks';\nimport './barra-superior.styles.scss';\nimport ModalCardapio from \"../modal-cardapio/modal-cardapio.component\";\n\n/**\n * @author Matheus Rocha <matheus.silva@gsw.com.br>\n * @function BarraSuperior Componente que concentra as informações do Bot e um botão para ativar o ModalCardapio\n * @param {String} nome Nome do Bot\n * @param {String} status Se ele se encontra online ou offline\n * @param {String} fotoUrl Url para a foto do Bot\n * */\nconst BarraSuperior = ({nome, status, fotoUrl}) => {\n\n    const [modalCardapio] = useGlobalState('modalCardapio');\n\n    return (\n        <header className=\"barra-superior\">\n            <div className=\"barra-superior__foto\" style={{\n                backgroundImage: `url(${fotoUrl})`\n            }}/>\n            <div className=\"barra-superior__info\">\n                <h1 className=\"barra-superior__nome\">{nome}</h1>\n                <h2 className=\"barra-superior__status\">{status}</h2>\n            </div>\n            <Button className=\"barra-superior__modal-cardapio\" onClick={showModalCardapio}>Ver cardápio</Button>\n            <ModalCardapio className={modalCardapio} itens={itensCardapio}/>\n        </header>\n    )\n};\n\nexport default BarraSuperior;","import Swal from \"sweetalert2\";\n\n/**\n * @author Matheus Rocha <matheus.silva@gsw.com.br>\n * @function ToastAutenticado Toast da biblioteca SweetAlert2 para indicar sucesso de autenticação\n * @param {String} nome\n * */\nconst ToastAutenticado = ({nome}) => {\n    const Toast = Swal.mixin({\n        toast: true,\n        position: 'top',\n        showConfirmButton: false,\n        timer: 2300,\n        timerProgressBar: true,\n        onOpen: (toast) => {\n            toast.addEventListener('mouseenter', Swal.stopTimer);\n            toast.addEventListener('mouseleave', Swal.resumeTimer);\n        }\n    });\n\n    Toast.fire({\n        icon: 'success',\n        title: `${nome} autenticado com sucesso!`\n    });\n\n    return null;\n};\n\nexport default ToastAutenticado;","import React from 'react';\nimport './chat.styles.scss';\nimport './autenticacao.scss';\nimport './scrollbar.scss';\nimport {DirectLine} from 'botframework-directlinejs';\nimport FullReactWebChat from 'botframework-webchat';\nimport Swal from \"sweetalert2\";\nimport ToastAutenticado from \"../toast-autenticado/toast-autenticado.component\";\n\n/**\n * @author Matheus Rocha <matheus.silva@gsw.com.br>\n * @class Chat Componente de Chat da azure\n * */\nclass Chat extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.directLine = new DirectLine({token: `${process.env.REACT_APP_KEY}`});\n        this.state = {\n            user: '',\n            value: '',\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    styleSet = window.WebChat.createStyleSet({\n        bubbleBackground: '#FFF',\n        bubbleFromUserBackground: '#e1ffc7',\n        hideUploadButton: true,\n        sendBoxBackground: 'White',\n        sendBoxButtonColor: '#009a8e',\n        sendBoxButtonColorOnHover: 'rgba(66,65,67,0.7)',\n        timestampFormat: 'absolute', // 'absolute'\n    });\n\n    handleChange(event) {\n        this.setState({value: event.target.value});\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        const {value} = this.state;\n        if (value)\n            this.setState({user: value});\n        else\n            Swal.fire({\n                icon: 'error',\n                text: 'Digite um nome válido!',\n            });\n    }\n\n    render() {\n        const {user, value} = this.state;\n        return (\n            <div className=\"chat\">\n                {\n                    !user ?\n                        <div className=\"container-validacao\">\n                            <div className=\"form-autenticacao box has-text-centered\">\n                                <div className=\"field\">\n                                    <label className=\"label title is-3\">Entre com seu nome</label>\n                                    <div className=\"control\">\n                                        <input className=\"input\" type=\"text\" value={value}\n                                               onChange={this.handleChange}/>\n                                    </div>\n                                    <button className=\"form-autenticacao__button\"\n                                            onClick={this.handleSubmit}>Enviar\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n                        :\n                        (\n                            <>\n                                <ToastAutenticado nome={user}/>\n                                <FullReactWebChat directLine={this.directLine} userID={user}\n                                                  styleSet={this.styleSet}/>\n                            </>\n                        )\n                }\n            </div>\n        );\n    }\n}\n\nexport default Chat;","import React, { StrictMode } from 'react';\nimport { GlobalStateProvider } from '../../utils/global-state-modal-cardapio';\nimport BarraSuperior from \"../../components/barra-superior/barra-superior.component\";\nimport {infosBarraSuperior} from '../../utils/mocks';\nimport Chat from \"../../components/chat/chat.component\";\n\n/**\n * Página inicial (e principal) da aplicação\n * @author Matheus Rocha <matheus.silva@gsw.com.br>\n *\n */\nconst Home = () => {\n\n    return (\n        <StrictMode>\n            <GlobalStateProvider>\n                <BarraSuperior {...infosBarraSuperior} />\n            </GlobalStateProvider>\n            <Chat />\n        </StrictMode>\n    );\n};\n\nexport default Home;","/**\n * @author Matheus Rocha <matheus.silva@gsw.com.br>\n * @file urls Arquivo para centralizar as urls da Azure\n * */\n\nexport const urlAuthentication = 'https://directline.botframework.com/v3/directline/tokens/generate';\nexport const urlConversation = 'https://directline.botframework.com/v3/directline/conversations';\nexport const urlMessage = (idMessage) => `https://directline.botframework.com/v3/directline/conversations/${idMessage}/activities`;\nexport const urlResponse = (conversation, message) => `https://directline.botframework.com/v3/directline/conversations/${conversation}/activities?watermark=${message}`;","import React from 'react';\n\nimport './teste-integracao.styles.css';\nimport axios from \"axios\";\nimport {urlAuthentication, urlConversation, urlMessage, urlResponse} from \"../../services/urls\";\nimport Swal from 'sweetalert2';\n\n/**\n * Página para testar a comunicação com a API da Azure\n * @author Matheus Rocha <matheus.silva@gsw.com.br>\n */\n\nexport default class TesteIntegracao extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.handleClick = this.handleClick.bind(this);\n        this.state = {\n            botResponseId: [],\n            conversationId: '',\n            isAuthenticated: false,\n            isLoading: false,\n            responses: [],\n            token: '',\n        };\n    }\n\n    handleClick() {\n        this.setState({isLoading: !this.state.isLoading})\n    }\n\n    autentica = async () => {\n        this.handleClick();\n        await axios.post(urlAuthentication, {}, {\n            headers: {Authorization: `bearer ${process.env.REACT_APP_KEY}`}\n        })\n            .then(res => {\n                this.setState({isAuthenticated: true, token: res.data.token});\n                console.log(\"autenticação efetuada com sucesso\");\n            })\n            .catch(err => console.log(`Erro ao autenticar!\\n${err}`));\n        this.handleClick();\n    };\n\n    inicia = async () => {\n        this.handleClick();\n        await axios.post(urlConversation, {}, {\n            headers: {Authorization: `bearer ${process.env.REACT_APP_KEY}`}\n        })\n            .then(res => {\n                this.setState({conversationId: res.data.conversationId});\n                console.log(\"comunicação bem sucedida\");\n            })\n            .catch(err => console.log(`Erro ao iniciar conversa!\\n${err}`));\n        this.handleClick();\n    };\n\n    enviaOi = async () => {\n        this.handleClick();\n        await axios.post(urlMessage(this.state.conversationId), {\n            type: 'message',\n            from: {\n                id: 'id_fulano',\n                name: \"Fulano\"\n            },\n            text: 'oi',\n        }, {headers: {Authorization: `bearer ${process.env.REACT_APP_KEY}`}})\n            .then(res => {\n                const splitedData = res.data.id.split('|');\n                this.setState({botResponseId: splitedData});\n                console.log(\"oi enviado\");\n            })\n            .catch(err => console.log(`Erro ao enviar oi!\\n${err}`));\n        this.handleClick();\n    };\n\n    recebeRespostas = async () => {\n        this.handleClick();\n        await axios.get(urlResponse(this.state.botResponseId[0], this.state.botResponseId[1]), {\n            headers: {Authorization: `bearer ${process.env.REACT_APP_KEY}`},\n        })\n            .then(res => {\n                let arr = [];\n                res.data.activities.forEach(activity => arr.push(activity));\n                console.log(arr);\n                this.setState({responses: arr});\n                this.state.responses.forEach(resp => {\n                   Swal.fire({\n                       text: resp.text,\n                   });\n                });\n            });\n        this.handleClick();\n    };\n\n    render() {\n        return (\n            <div>\n                <h1>CHATBOT - Teste de integração</h1>\n                <div className=\"secoes\">\n                    <section className=\"acoes\">\n                        <ol>\n                            <li>\n                                <button className={this.state.isLoading ? \"button is-loading\" : \"button\"}\n                                        onClick={this.autentica}>Autentica\n                                </button>\n                            </li>\n                            <li>\n                                <button className={this.state.isLoading ? \"button is-loading\" : \"button\"}\n                                        onClick={this.inicia}>Inicia conversa\n                                </button>\n                            </li>\n                            <li>\n                                <button className={this.state.isLoading ? \"button is-loading\" : \"button\"}\n                                        onClick={this.enviaOi}>Enviar \"oi\"\n                                </button>\n                            </li>\n                            <li>\n                                <button className={this.state.isLoading ? \"button is-loading\" : \"button\"}\n                                        onClick={this.recebeRespostas}>Receber Respostas\n                                </button>\n                            </li>\n                        </ol>\n                    </section>\n                    <section className=\"respostas\">\n                        <p>Autenticado? {this.state.isAuthenticated ? <span>SIM</span> : <span>NÃO</span>}</p>\n                        <p>Token recebido? {this.state.token ? <span>SIM</span> : <span>NÃO</span>}</p>\n                        <p>ID da conversa recebido? {this.state.conversationId ? <span>SIM</span> :\n                            <span>NÃO</span>}</p>\n                        <p>ID da resposta recebido? {this.state.botResponseId.length > 0 ? <span>SIM</span> :\n                            <span>NÃO</span>}</p>\n                    </section>\n                </div>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport {Route, Switch} from 'react-router-dom';\nimport './App.css';\nimport Home from \"./pages/home/home.component\";\nimport TesteIntegracao from \"./pages/teste-integracao/teste-integracao.component\";\n\n/**\n * Componente responsável por gerenciar as rotas da aplicação\n * @author Matheus Rocha <matheus.silva@gsw.com.br>\n */\nconst App = () => {\n\n    return (\n        <Switch>\n            <Route exact path=\"/\" component={Home}/>\n            <Route exact path=\"/integracao\" component={TesteIntegracao}/>\n        </Switch>\n    );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from \"react-router-dom\";\n\nReactDOM.render(\n    <BrowserRouter>\n        <App/>\n    </BrowserRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}